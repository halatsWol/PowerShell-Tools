name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build-userOnly:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check installer script exists
        run: |
          if (!(Test-Path 'make/Modules-Suite-Installer-Script_UserInstall.iss')) {
            Write-Error 'Installer script not found!'
            exit 1
          }
        shell: pwsh

      - name: Build system-wide installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.6
        with:
          path: make/Modules-Suite-Installer-Script_UserInstall.iss
          options: >
            /DMyAppVersion=${{ github.ref_name }}

      - name: Upload Installer
        uses: actions/upload-artifact@v4.6.2
        with:
          name: installerUserOnly
          path: make/installer/Setup_PowershellModulesSuite_UserInstaller.exe

  build-allUsers:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check installer script exists
        run: |
          if (!(Test-Path 'make/Modules-Suite-Installer-Script.iss')) {
            Write-Error 'Installer script not found!'
            exit 1
          }
        shell: pwsh

      - name: Build system-wide installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.6
        with:
          path: make/Modules-Suite-Installer-Script.iss
          options: >
            /DMyAppVersion=${{ github.ref_name }}

      - name: Upload Installer
        uses: actions/upload-artifact@v4.6.2
        with:
          name: installerAllUsers
          path: make/installer/Setup_PowershellModulesSuite.exe

  release:
    runs-on: windows-latest
    needs: [build-userOnly, build-allUsers]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get tag name
        id: vars
        run: |
          raw="${GITHUB_REF#refs/tags/}"
          tag=$(echo "$raw" | xargs)         # trims whitespace
          tag=$(echo "$tag" | tr -d '[:space:]')
          tag=${tag//[\/:*?<>|]/_}           # removed " from char class
          echo "tag=$tag" >> $GITHUB_OUTPUT
        shell: bash

      - name: Read release notes
        id: notes
        run: |
          echo "content<<EOF" >> $GITHUB_OUTPUT
          cat make/releasenote.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download installerUserOnly
        uses: actions/download-artifact@v5.0.0
        with:
          name: installerUserOnly
          path: installer/

      - name: Download installerAllUsers
        uses: actions/download-artifact@v5.0.0
        with:
          name: installerAllUsers
          path: installer/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: PowerShell-Tools - Installer ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.content }}
          files: |
            installer/Setup_PowershellModulesSuite_UserInstaller.exe
            installer/Setup_PowershellModulesSuite.exe
          make_latest: true
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}
